{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Zidane Firdaus\\\\template\\\\Todo-List-React-App-main\\\\Todo-List-React-App-main\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useState}from'react';import TodoForm from'./TodoForm';import{AiFillCloseCircle}from\"react-icons/ai\";import{AiFillEdit}from'react-icons/ai';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Todo=function Todo(_ref){var todos=_ref.todos,completeTodo=_ref.completeTodo,removeTodo=_ref.removeTodo,updateTodo=_ref.updateTodo;var _useState=useState({id:null,value:''}),_useState2=_slicedToArray(_useState,2),edit=_useState2[0],setEdit=_useState2[1];var submitUpdate=function submitUpdate(value){updateTodo(edit.id,value);setEdit({id:null,value:''});};if(edit.id){return/*#__PURE__*/_jsx(TodoForm,{edit:edit,onSubmit:submitUpdate});}return todos.map(function(todo,index){return/*#__PURE__*/_jsxs(\"div\",{className:todo.isComplete?'todo-row complete':'todo-row',children:[/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){return completeTodo(todo.id);},children:todo.text},todo.id),/*#__PURE__*/_jsxs(\"div\",{className:\"icons\",children:[/*#__PURE__*/_jsx(AiFillCloseCircle,{onClick:function onClick(){return removeTodo(todo.id);},className:\"delete-icon\"}),/*#__PURE__*/_jsx(AiFillEdit,{onClick:function onClick(){return setEdit({id:todo.id,value:todo.text});},className:\"edit-icon\"})]})]},index);});};export default Todo;","map":{"version":3,"sources":["C:/Users/Zidane Firdaus/template/Todo-List-React-App-main/Todo-List-React-App-main/src/components/Todo.js"],"names":["React","useState","TodoForm","AiFillCloseCircle","AiFillEdit","Todo","todos","completeTodo","removeTodo","updateTodo","id","value","edit","setEdit","submitUpdate","map","todo","index","isComplete","text"],"mappings":"mLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,iBAAT,KAAkC,gBAAlC,CACA,OAASC,UAAT,KAA2B,gBAA3B,C,wFAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAqD,IAAlDC,CAAAA,KAAkD,MAAlDA,KAAkD,CAA3CC,YAA2C,MAA3CA,YAA2C,CAA7BC,UAA6B,MAA7BA,UAA6B,CAAjBC,UAAiB,MAAjBA,UAAiB,CAChE,cAAwBR,QAAQ,CAAC,CAC/BS,EAAE,CAAE,IAD2B,CAE/BC,KAAK,CAAE,EAFwB,CAAD,CAAhC,wCAAOC,IAAP,eAAaC,OAAb,eAMA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAH,KAAK,CAAI,CAC5BF,UAAU,CAACG,IAAI,CAACF,EAAN,CAAUC,KAAV,CAAV,CACAE,OAAO,CAAC,CACNH,EAAE,CAAE,IADE,CAENC,KAAK,CAAE,EAFD,CAAD,CAAP,CAID,CAND,CAQA,GAAIC,IAAI,CAACF,EAAT,CAAa,CACX,mBAAO,KAAC,QAAD,EAAU,IAAI,CAAEE,IAAhB,CAAsB,QAAQ,CAAEE,YAAhC,EAAP,CACD,CAED,MAAOR,CAAAA,KAAK,CAACS,GAAN,CAAU,SAACC,IAAD,CAAOC,KAAP,qBACf,aACE,SAAS,CAAED,IAAI,CAACE,UAAL,CAAkB,mBAAlB,CAAwC,UADrD,wBAIE,YAAmB,OAAO,CAAE,yBAAMX,CAAAA,YAAY,CAACS,IAAI,CAACN,EAAN,CAAlB,EAA5B,UACGM,IAAI,CAACG,IADR,EAAUH,IAAI,CAACN,EAAf,CAJF,cAOE,aAAK,SAAS,CAAC,OAAf,wBACE,KAAC,iBAAD,EACE,OAAO,CAAE,yBAAMF,CAAAA,UAAU,CAACQ,IAAI,CAACN,EAAN,CAAhB,EADX,CAEE,SAAS,CAAC,aAFZ,EADF,cAKE,KAAC,UAAD,EACE,OAAO,CAAE,yBAAMG,CAAAA,OAAO,CAAC,CAAEH,EAAE,CAAEM,IAAI,CAACN,EAAX,CAAeC,KAAK,CAAEK,IAAI,CAACG,IAA3B,CAAD,CAAb,EADX,CAEE,SAAS,CAAC,WAFZ,EALF,GAPF,GAEOF,KAFP,CADe,EAAV,CAAP,CAoBD,CAvCD,CAyCA,cAAeZ,CAAAA,IAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport { AiFillCloseCircle } from \"react-icons/ai\";\r\nimport { AiFillEdit } from 'react-icons/ai';\r\n\r\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  });\r\n  \r\n\r\n  const submitUpdate = value => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: ''\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div\r\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n      key={index}\r\n    >\r\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n        {todo.text}\r\n      </div>\r\n      <div className='icons'>\r\n        <AiFillCloseCircle\r\n          onClick={() => removeTodo(todo.id)}\r\n          className='delete-icon'\r\n        />\r\n        <AiFillEdit\r\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n          className='edit-icon'\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default Todo;"]},"metadata":{},"sourceType":"module"}